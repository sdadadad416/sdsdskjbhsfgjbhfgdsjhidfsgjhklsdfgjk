name: Free Windows Desktop with NoVNC + Cloudflare Tunnel

on: workflow_dispatch

jobs:
  setup-novnc-tunnel:
    runs-on: windows-latest
    steps:
    - name: Check out the repository
      uses: actions/checkout@v2

    - name: Download and Setup TightVNC Server
      run: |
        Write-Host "üì• –°–∫–∞—á–∏–≤–∞–µ–º TightVNC Server..."
        try {
            Invoke-WebRequest -Uri "https://www.tightvnc.com/download/2.8.85/tightvnc-2.8.85-gpl-setup-64bit.msi" -OutFile "$env:TEMP\tightvnc.msi"
            
            Write-Host "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º TightVNC Server..."
            $installArgs = @(
                '/i', "$env:TEMP\tightvnc.msi"
                '/quiet', '/norestart'
                'ADDLOCAL=Server'
                'SERVER_REGISTER_AS_SERVICE=1'
                'SERVER_ADD_FIREWALL_EXCEPTION=1'
                'SET_USEVNCAUTHENTICATION=1'
                'VALUE_OF_USEVNCAUTHENTICATION=1'
                'SET_PASSWORD=1'
                'VALUE_OF_PASSWORD=vnc123456'
                'SET_USECONTROLAUTHENTICATION=1'
                'VALUE_OF_USECONTROLAUTHENTICATION=1'
                'SET_CONTROLPASSWORD=1'
                'VALUE_OF_CONTROLPASSWORD=admin123456'
            )
            
            $process = Start-Process msiexec.exe -Wait -ArgumentList $installArgs -PassThru
            if ($process.ExitCode -eq 0) {
                Write-Host "‚úÖ TightVNC Server —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
            } else {
                Write-Host "‚ö†Ô∏è TightVNC —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Å –∫–æ–¥–æ–º: $($process.ExitCode)"
            }
        } catch {
            Write-Host "‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ TightVNC: $($_.Exception.Message)"
        }
        Start-Sleep -Seconds 5

    - name: Download and Setup NoVNC
      run: |
        Write-Host "üì• –°–∫–∞—á–∏–≤–∞–µ–º NoVNC..."
        Invoke-WebRequest -Uri "https://github.com/novnc/noVNC/archive/refs/tags/v1.4.0.zip" -OutFile "$env:TEMP\novnc.zip"
        
        Write-Host "üì¶ –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º NoVNC..."
        Expand-Archive -Path "$env:TEMP\novnc.zip" -DestinationPath "$env:USERPROFILE" -Force
        Rename-Item -Path "$env:USERPROFILE\noVNC-1.4.0" -NewName "novnc" -Force
        
        Write-Host "üì• –°–∫–∞—á–∏–≤–∞–µ–º websockify..."
        Invoke-WebRequest -Uri "https://github.com/novnc/websockify/archive/refs/tags/v0.11.0.zip" -OutFile "$env:TEMP\websockify.zip"
        Expand-Archive -Path "$env:TEMP\websockify.zip" -DestinationPath "$env:USERPROFILE" -Force
        Rename-Item -Path "$env:USERPROFILE\websockify-0.11.0" -NewName "websockify" -Force
        
        Write-Host "‚úÖ NoVNC –Ω–∞—Å—Ç—Ä–æ–µ–Ω!"

    - name: Install Python and Setup Websockify
      run: |
        Write-Host "üêç –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Python..."
        Invoke-WebRequest -Uri "https://www.python.org/ftp/python/3.11.9/python-3.11.9-amd64.exe" -OutFile "$env:TEMP\python.exe"
        Start-Process -FilePath "$env:TEMP\python.exe" -ArgumentList "/quiet", "InstallAllUsers=1", "PrependPath=1", "Include_test=0" -Wait
        
        # –û–±–Ω–æ–≤–ª—è–µ–º PATH
        $env:PATH = [System.Environment]::GetEnvironmentVariable("PATH","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("PATH","User")
        
        Write-Host "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
        python -m pip install --upgrade pip
        python -m pip install numpy
        
        Write-Host "‚úÖ Python –Ω–∞—Å—Ç—Ä–æ–µ–Ω!"

    - name: Download and Setup Cloudflare Tunnel
      run: |
        Write-Host "‚òÅÔ∏è –°–∫–∞—á–∏–≤–∞–µ–º Cloudflare Tunnel (cloudflared)..."
        Invoke-WebRequest -Uri "https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-windows-amd64.exe" -OutFile "$env:USERPROFILE\cloudflared.exe"
        
        Write-Host "‚úÖ Cloudflared –≥–æ—Ç–æ–≤!"

    - name: System Setup and User Configuration
      run: |
        Write-Host "‚öôÔ∏è –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Å–∏—Å—Ç–µ–º—É..."
        
        # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è VNC
        Write-Host "üë§ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è..."
        Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "Desktop2024!" -Force)
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–ª–æ–≥–∏–Ω–∞
        Write-Host "üîê –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∞–≤—Ç–æ–ª–æ–≥–∏–Ω..."
        Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon" -Name "AutoAdminLogon" -Value "1" -Type String
        Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon" -Name "DefaultUserName" -Value "runneradmin" -Type String
        Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon" -Name "DefaultPassword" -Value "Desktop2024!" -Type String
        
        # –û—Ç–∫–ª—é—á–∞–µ–º —ç–∫—Ä–∞–Ω –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
        Write-Host "üñ•Ô∏è –û—Ç–∫–ª—é—á–∞–µ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫—É —ç–∫—Ä–∞–Ω–∞..."
        try {
            New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows" -Name "Personalization" -Force -ErrorAction SilentlyContinue
            Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Personalization" -Name "NoLockScreen" -Value 1 -Type DWord -Force -ErrorAction SilentlyContinue
        } catch {
            Write-Host "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫–ª—é—á–∏—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫—É —ç–∫—Ä–∞–Ω–∞: $($_.Exception.Message)"
        }
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–∏—Å–ø–ª–µ—è
        Write-Host "üñºÔ∏è –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ —ç–∫—Ä–∞–Ω–∞..."
        Add-Type -AssemblyName System.Windows.Forms
        $screen = [System.Windows.Forms.Screen]::PrimaryScreen
        Write-Host "–¢–µ–∫—É—â–µ–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ: $($screen.Bounds.Width)x$($screen.Bounds.Height)"
        
        Write-Host "‚å®Ô∏è –î–æ–±–∞–≤–ª—è–µ–º —Ä—É—Å—Å–∫—É—é —Ä–∞—Å–∫–ª–∞–¥–∫—É..."
        try {
            $inputLanguageID = New-WinUserLanguageList -Language "ru-RU"
            $inputLanguageID += New-WinUserLanguageList -Language "en-US"
            Set-WinUserLanguageList -LanguageList $inputLanguageID -Force
        } catch {
            Write-Host "‚ö†Ô∏è –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —è–∑—ã–∫–∞: $($_.Exception.Message)"
        }
        
        Write-Host "‚úÖ –°–∏—Å—Ç–µ–º–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞!"

    - name: Start VNC Server
      run: |
        Write-Host "üñ•Ô∏è –ó–∞–ø—É—Å–∫–∞–µ–º VNC Server..."
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É TightVNC
        $tvnPath = "C:\Program Files\TightVNC\tvnserver.exe"
        if (-not (Test-Path $tvnPath)) {
            Write-Host "‚ùå TightVNC –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ –ø—É—Ç–∏: $tvnPath"
            Write-Host "üîç –ò—â–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –ø—É—Ç–∏..."
            $altPaths = @(
                "C:\Program Files (x86)\TightVNC\tvnserver.exe",
                "$env:ProgramFiles\TightVNC\tvnserver.exe",
                "${env:ProgramFiles(x86)}\TightVNC\tvnserver.exe"
            )
            foreach ($path in $altPaths) {
                if (Test-Path $path) {
                    $tvnPath = $path
                    Write-Host "‚úÖ –ù–∞–π–¥–µ–Ω TightVNC: $path"
                    break
                }
            }
        }
        
        if (Test-Path $tvnPath) {
            # –ü—Ä–æ–±—É–µ–º –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å
            try {
                Start-Service -Name "tvnserver" -ErrorAction SilentlyContinue
                Start-Sleep -Seconds 5
            } catch {
                Write-Host "‚ö†Ô∏è –°–µ—Ä–≤–∏—Å –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è: $($_.Exception.Message)"
            }
            
            # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –∑–∞–ø—É—Å–∫ –µ—Å–ª–∏ —Å–µ—Ä–≤–∏—Å –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
            if ((Get-Service -Name "tvnserver" -ErrorAction SilentlyContinue).Status -ne "Running") {
                Write-Host "‚ö†Ô∏è –ó–∞–ø—É—Å–∫–∞–µ–º VNC –≤—Ä—É—á–Ω—É—é..."
                try {
                    Start-Process -FilePath $tvnPath -ArgumentList "-run" -WindowStyle Hidden
                    Start-Sleep -Seconds 10
                } catch {
                    Write-Host "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ VNC: $($_.Exception.Message)"
                }
            }
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ VNC —Å–ª—É—à–∞–µ—Ç –ø–æ—Ä—Ç 5900
            Start-Sleep -Seconds 5
            $vnc = Get-NetTCPConnection -LocalPort 5900 -ErrorAction SilentlyContinue
            if ($vnc) {
                Write-Host "‚úÖ VNC Server –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 5900"
            } else {
                Write-Host "‚ùå VNC Server –Ω–µ —Å–ª—É—à–∞–µ—Ç –ø–æ—Ä—Ç 5900"
                Write-Host "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –ø–æ—Ä—Ç—ã..."
                Get-NetTCPConnection | Where-Object {$_.LocalPort -like "59*"} | Format-Table LocalAddress,LocalPort,State
            }
        } else {
            Write-Host "‚ùå TightVNC –Ω–µ –Ω–∞–π–¥–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–≥–ª–∞ –Ω–µ –∑–∞–≤–µ—Ä—à–∏—Ç—å—Å—è."
        }

    - name: Start NoVNC Websockify
      run: |
        Write-Host "üåê –ó–∞–ø—É—Å–∫–∞–µ–º NoVNC websockify..."
        
        # –û–±–Ω–æ–≤–ª—è–µ–º PATH –¥–ª—è Python
        $env:PATH = [System.Environment]::GetEnvironmentVariable("PATH","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("PATH","User")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º websockify –≤ —Ñ–æ–Ω–µ
        $websockifyJob = Start-Job -ScriptBlock {
            Set-Location "$env:USERPROFILE\websockify"
            python websockify.py --web="$env:USERPROFILE\novnc" 6080 localhost:5900
        }
        
        Start-Sleep -Seconds 15
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
        $jobState = Get-Job -Id $websockifyJob.Id | Select-Object -ExpandProperty State
        if ($jobState -eq "Running") {
            Write-Host "‚úÖ NoVNC websockify –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 6080!"
        } else {
            Write-Host "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ websockify"
            Receive-Job -Id $websockifyJob.Id
        }
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ websockify —Å–ª—É—à–∞–µ—Ç –ø–æ—Ä—Ç 6080
        Start-Sleep -Seconds 5
        $websocket = Get-NetTCPConnection -LocalPort 6080 -ErrorAction SilentlyContinue
        if ($websocket) {
            Write-Host "‚úÖ Websockify —Å–ª—É—à–∞–µ—Ç –ø–æ—Ä—Ç 6080"
        }

    - name: Start Cloudflare Tunnel and Keep Alive
      run: |
        Write-Host "‚òÅÔ∏è –ó–∞–ø—É—Å–∫–∞–µ–º Cloudflare Tunnel..."
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º cloudflared —Ç—É–Ω–Ω–µ–ª—å –≤ —Ñ–æ–Ω–µ
        Write-Host "üîó –°–æ–∑–¥–∞–µ–º —Ç—É–Ω–Ω–µ–ª—å –Ω–∞ trycloudflare.com..."
        $tunnelJob = Start-Job -ScriptBlock {
            & "$env:USERPROFILE\cloudflared.exe" tunnel --url http://localhost:6080
        }
        
        Start-Sleep -Seconds 20
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å tunnel job
        $jobState = Get-Job -Id $tunnelJob.Id | Select-Object -ExpandProperty State
        if ($jobState -eq "Running") {
            Write-Host "‚úÖ Cloudflare —Ç—É–Ω–Ω–µ–ª—å —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!"
            
            # –ü–æ–ª—É—á–∞–µ–º URL —Ç—É–Ω–Ω–µ–ª—è
            $tunnelOutput = Receive-Job -Id $tunnelJob.Id -Keep
            if ($tunnelOutput) {
                Write-Host "üìã –í—ã–≤–æ–¥ Cloudflare Tunnel:"
                $tunnelOutput | ForEach-Object { 
                    Write-Host $_
                    if ($_ -match "https://.*\.trycloudflare\.com") {
                        $global:tunnelUrl = $matches[0]
                    }
                }
            }
        } else {
            Write-Host "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ Cloudflare Tunnel"
            Receive-Job -Id $tunnelJob.Id
        }
        
        # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        Write-Host ""
        Write-Host "=" * 60
        Write-Host "üåê –ò–ù–§–û–†–ú–ê–¶–ò–Ø –î–õ–Ø –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø –ö DESKTOP"
        Write-Host "=" * 60
        Write-Host "üîó –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: –°–º–æ—Ç—Ä–∏—Ç–µ URL –≤—ã—à–µ –≤ –ª–æ–≥–∞—Ö Cloudflare"
        Write-Host "üîó –§–æ—Ä–º–∞—Ç: https://[random].trycloudflare.com"
        Write-Host "üîê VNC –ü–∞—Ä–æ–ª—å: vnc123456"
        Write-Host "üë§ Windows –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: runneradmin"
        Write-Host "üîë Windows –ü–∞—Ä–æ–ª—å: Desktop2024!"
        Write-Host "üíª –û—Ç–∫—Ä–æ–π—Ç–µ URL –≤ –±—Ä–∞—É–∑–µ—Ä–µ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ä–∞–±–æ—á–µ–º—É —Å—Ç–æ–ª—É"
        Write-Host "üéÆ –ü–æ–ª–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –∏ –º—ã—à–∏"
        Write-Host "=" * 60
        Write-Host ""
        
        Write-Host "‚è∞ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º —Ä–∞–±–æ—Ç—É —Ç—É–Ω–Ω–µ–ª—è..."
        Write-Host "üõë –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–µ—Ä–≤–∏—Ç–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ workflow"
        Write-Host "üìä –¢—É–Ω–Ω–µ–ª—å –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –≤ —Ç–µ—á–µ–Ω–∏–µ ~6 —á–∞—Å–æ–≤"
        
        # –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã
        $startTime = Get-Date
        $maxRunTime = New-TimeSpan -Hours 5 -Minutes 50
        $lastCheck = Get-Date
        
        while ((Get-Date) - $startTime -lt $maxRunTime) {
            try {
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 3 –º–∏–Ω—É—Ç—ã
                if ((Get-Date) - $lastCheck -gt (New-TimeSpan -Minutes 3)) {
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Cloudflare tunnel
                    $currentTunnelState = Get-Job -Id $tunnelJob -ErrorAction SilentlyContinue | Select-Object -ExpandProperty State
                    if ($currentTunnelState -ne "Running") {
                        Write-Host "‚ö†Ô∏è Cloudflare tunnel –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º..."
                        Remove-Job -Id $tunnelJob -Force -ErrorAction SilentlyContinue
                        
                        $tunnelJob = Start-Job -ScriptBlock {
                            & "$env:USERPROFILE\cloudflared.exe" tunnel --url http://localhost:6080
                        }
                        Start-Sleep -Seconds 15
                        
                        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–æ–≤—ã–π URL
                        $newOutput = Receive-Job -Id $tunnelJob -Keep
                        if ($newOutput) {
                            Write-Host "üîó –ù–æ–≤—ã–π URL Cloudflare:"
                            $newOutput | ForEach-Object { Write-Host $_ }
                        }
                    }
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º VNC —Å–µ—Ä–≤–µ—Ä
                    $vncPort = Get-NetTCPConnection -LocalPort 5900 -ErrorAction SilentlyContinue
                    if (-not $vncPort) {
                        Write-Host "‚ö†Ô∏è VNC Server –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º..."
                        Start-Process -FilePath "C:\Program Files\TightVNC\tvnserver.exe" -ArgumentList "-controlservice", "-start" -Wait
                    }
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º websockify
                    $websocketPort = Get-NetTCPConnection -LocalPort 6080 -ErrorAction SilentlyContinue
                    if (-not $websocketPort) {
                        Write-Host "‚ö†Ô∏è Websockify –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º..."
                        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ websockify –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
                    }
                    
                    $lastCheck = Get-Date
                    Write-Host "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ - $(Get-Date -Format 'HH:mm:ss')"
                }
                
                Start-Sleep -Seconds 45
                
            } catch {
                Write-Host "‚ùå –û—à–∏–±–∫–∞ –≤ —Ü–∏–∫–ª–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: $($_.Exception.Message)"
                Start-Sleep -Seconds 60
            }
        }
        
        Write-Host "‚è∞ –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ, –∑–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É..."
        Remove-Job -Id $tunnelJob -Force -ErrorAction SilentlyContinue
