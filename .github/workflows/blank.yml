name: Windows VNC Browser Access

on: workflow_dispatch

jobs:
  vnc-setup:
    runs-on: windows-latest
    steps:
    - name: Setup VNC Server
      run: |
        Write-Host "üì• –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º VNC —á–µ—Ä–µ–∑ Chocolatey..."
        Set-ExecutionPolicy Bypass -Scope Process -Force
        [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
        iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
        
        Write-Host "üñ•Ô∏è –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º UltraVNC..."
        choco install ultravnc -y --force
        
        Write-Host "üîß –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º VNC..."
        reg add "HKLM\SOFTWARE\ORL\WinVNC3\Default" /v "Password" /t REG_BINARY /d "238e24758cc8140d" /f
        reg add "HKLM\SOFTWARE\ORL\WinVNC3\Default" /v "AllowLoopback" /t REG_DWORD /d "1" /f
        
        Write-Host "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º VNC —Å–µ—Ä–≤–µ—Ä..."
        try {
            net stop uvnc_service 2>$null
        } catch {}
        Start-Process "C:\Program Files\uvnc bvba\UltraVNC\winvnc.exe" -ArgumentList "-install" -Wait -ErrorAction SilentlyContinue
        
        $serviceStatus = net start uvnc_service 2>&1
        if ($serviceStatus -like "*already*") {
            Write-Host "‚úÖ VNC —Å–ª—É–∂–±–∞ —É–∂–µ –∑–∞–ø—É—â–µ–Ω–∞"
        } else {
            Write-Host "‚úÖ VNC —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 5900"
        }
        Start-Sleep -Seconds 10

    - name: Setup noVNC
      run: |
        Write-Host "üì¶ –°–∫–∞—á–∏–≤–∞–µ–º noVNC..."
        Invoke-WebRequest -Uri "https://github.com/novnc/noVNC/archive/refs/heads/master.zip" -OutFile "novnc.zip"
        Expand-Archive -Path "novnc.zip" -DestinationPath "C:\" -Force
        Rename-Item "C:\noVNC-master" "C:\noVNC"
        
        Write-Host "üêç –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º websockify..."
        pip install websockify

    - name: Setup Cloudflare Tunnel
      run: |
        Write-Host "‚òÅÔ∏è –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Cloudflared..."
        Invoke-WebRequest -Uri "https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-windows-amd64.exe" -OutFile "cloudflared.exe"

    - name: Start Services and Tunnel
      run: |
        Write-Host "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º websockify –¥–ª—è VNC..."
        Start-Job -ScriptBlock {
            websockify --web=C:\noVNC 6080 localhost:5900
        }
        
        Start-Sleep -Seconds 15
        
        Write-Host "üåê –°–æ–∑–¥–∞–µ–º Cloudflare —Ç—É–Ω–Ω–µ–ª—å..."
        Start-Process .\cloudflared.exe -ArgumentList "tunnel --url http://localhost:6080" -WindowStyle Hidden -PassThru -RedirectStandardOutput "tunnel.log"
        
        Start-Sleep -Seconds 20
        
        Write-Host "üìã –î–û–°–¢–£–ü –ö VNC:"
        Write-Host "=" * 40
        if (Test-Path "tunnel.log") {
            $content = Get-Content "tunnel.log" -Raw
            if ($content -match "https://[^/\s]+\.trycloudflare\.com") {
                $tunnelUrl = $matches[0]
                Write-Host "üåê URL: $tunnelUrl"
                Write-Host "üîê VNC –ø–∞—Ä–æ–ª—å: 123456"
                Write-Host "üí° –û—Ç–∫—Ä–æ–π—Ç–µ URL –≤ –±—Ä–∞—É–∑–µ—Ä–µ"
            } else {
                Write-Host "‚ö†Ô∏è –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏..."
                Get-Content "tunnel.log" | Write-Host
            }
        }
        Write-Host "=" * 40
        
        Write-Host "‚è∞ –î–µ—Ä–∂–∏–º —Ç—É–Ω–Ω–µ–ª—å –∞–∫—Ç–∏–≤–Ω—ã–º..."
        for ($i = 1; $i -le 300; $i++) {
            Start-Sleep -Seconds 60
            if ($i % 5 -eq 0) {
                Write-Host "‚úÖ –ê–∫—Ç–∏–≤–µ–Ω $i –º–∏–Ω"
            }
        }
